// Generated by view binder compiler. Do not edit!
package com.example.a16_room.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.a16_room.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonDelete;

  @NonNull
  public final Button buttonEdit;

  @NonNull
  public final Button buttonInsert;

  @NonNull
  public final EditText editPassword;

  @NonNull
  public final EditText editUsername;

  @NonNull
  public final RecyclerView recyclerUsers;

  @NonNull
  public final TextView textId;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull Button buttonDelete,
      @NonNull Button buttonEdit, @NonNull Button buttonInsert, @NonNull EditText editPassword,
      @NonNull EditText editUsername, @NonNull RecyclerView recyclerUsers,
      @NonNull TextView textId) {
    this.rootView = rootView;
    this.buttonDelete = buttonDelete;
    this.buttonEdit = buttonEdit;
    this.buttonInsert = buttonInsert;
    this.editPassword = editPassword;
    this.editUsername = editUsername;
    this.recyclerUsers = recyclerUsers;
    this.textId = textId;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_delete;
      Button buttonDelete = ViewBindings.findChildViewById(rootView, id);
      if (buttonDelete == null) {
        break missingId;
      }

      id = R.id.button_edit;
      Button buttonEdit = ViewBindings.findChildViewById(rootView, id);
      if (buttonEdit == null) {
        break missingId;
      }

      id = R.id.button_insert;
      Button buttonInsert = ViewBindings.findChildViewById(rootView, id);
      if (buttonInsert == null) {
        break missingId;
      }

      id = R.id.edit_password;
      EditText editPassword = ViewBindings.findChildViewById(rootView, id);
      if (editPassword == null) {
        break missingId;
      }

      id = R.id.edit_username;
      EditText editUsername = ViewBindings.findChildViewById(rootView, id);
      if (editUsername == null) {
        break missingId;
      }

      id = R.id.recycler_users;
      RecyclerView recyclerUsers = ViewBindings.findChildViewById(rootView, id);
      if (recyclerUsers == null) {
        break missingId;
      }

      id = R.id.text_id;
      TextView textId = ViewBindings.findChildViewById(rootView, id);
      if (textId == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, buttonDelete, buttonEdit,
          buttonInsert, editPassword, editUsername, recyclerUsers, textId);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
